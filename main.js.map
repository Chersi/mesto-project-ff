{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto_project/./src/api.js","webpack://mesto_project/./src/components/modal.js","webpack://mesto_project/./src/components/card.js","webpack://mesto_project/./src/components/validation.js","webpack://mesto_project/./src/index.js"],"sourcesContent":["/*Идентификатор нашей группы: wff-cohort-41\r\nТвой токен: cab10226-6fa6-43c5-8b85-1656c593204c*/\r\n\r\nconst config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-41',\r\n  headers: {\r\n    authorization: 'cab10226-6fa6-43c5-8b85-1656c593204c',\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\n\r\nexport const userInformation = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers\r\n  })\r\n  .then((res) => result(res));\r\n}\r\n  \r\n\r\nexport const addAllCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers\r\n  })\r\n  .then((res) => result(res));\r\n}\r\n\r\n\r\nexport const saveUserInformation = (newProfile) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: newProfile.name,\r\n      about: newProfile.about,\r\n    })\r\n  })\r\n  .then((res) => result(res));\r\n}\r\n\r\n\r\nexport const addCard = (newCard) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: newCard.name,\r\n      link: newCard.link,\r\n      like: newCard.like,\r\n    })\r\n  })\r\n  .then((res) => result(res));\r\n}\r\n\r\nexport const deleteCardRequest = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n  .then((res) => result(res));\r\n}\r\n\r\n\r\nexport const addLikeRequest = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      _id: cardId,\r\n    }),\r\n  })\r\n  .then((res) => result(res));\r\n}\r\n\r\n\r\nexport const deleteLikeRequest = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n  .then((res) => result(res));\r\n}\r\n\r\n\r\nexport const newAvatar = (avatar) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: avatar.avatar,\r\n    }),\r\n  })\r\n  .then((res) => result(res));\r\n}\r\n\r\n\r\nfunction result(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n}","function closeModalEsc (element) {\r\n    if (event.key === 'Escape') {\r\n        const openedModals = document.querySelector('.popup_is-opened'); \r\n        closeModal(openedModals)\r\n    };\r\n};\r\n\r\n\r\nfunction openModal(element) {\r\n    element.classList.add('popup_is-animated');\r\n        setTimeout(() => {\r\n            element.classList.add('popup_is-opened');\r\n    }, 10);\r\n    document.addEventListener('keydown', closeModalEsc);\r\n};\r\n\r\nfunction closeModal(modal) {\r\n    modal.classList.remove('popup_is-opened');\r\n    document.removeEventListener('keydown', closeModalEsc);\r\n    setTimeout(() => {\r\n        modal.classList.remove('popup_is-animated');\r\n    }, 300);\r\n}\r\n\r\n// Получаем массив всех модальных окон\r\nconst modals = document.querySelectorAll('.popup'); \r\n\r\nfunction initModals() {\r\n    modals.forEach((modal) => {\r\n        modal.addEventListener('click', (event)  => {\r\n            if(event.target.classList.contains('popup__close') || event.target.classList.contains('popup')) { // так мы проверим, что юзер кликнул на кнопку или оверлей\r\n                closeModal(modal); // и если это так, закрываем окно, на которое вешаем слушатель (он же на нем сработал)\r\n            }\r\n        })\r\n    })\r\n};\r\n\r\nexport {closeModal, openModal, initModals};","import {deleteCardRequest, addLikeRequest, deleteLikeRequest} from '../api'\r\nimport {openModal, closeModal} from './modal'\r\n\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\nconst popupAgreementDelete = document.querySelector('.popup_agreement-delete');\r\nconst popupButtonDelete = document.querySelector('.popup__button-delete');\r\n\r\nfunction createCard(cardData, userId, deleteCard, toggleLike, openImagePopup) {\r\n    const cardElement = cardTemplate.querySelector('.card').cloneNode(true);\r\n    const cardImage = cardElement.querySelector('.card__image');\r\n    const cardLikeCounter = cardElement.querySelector('.card__like-counter');\r\n    const buttonDelete = cardElement.querySelector('.card__delete-button')\r\n    const cardLikeButton = cardElement.querySelector('.card__like-button');\r\n\r\n    cardElement.querySelector('.card__title').textContent = cardData.name;\r\n    cardImage.src = cardData.link;\r\n    cardImage.alt = cardData.name;\r\n    cardLikeCounter.textContent = cardData.likes.length;\r\n\r\n    if(userId === cardData.owner._id) {\r\n        buttonDelete.addEventListener('click', () => {\r\n            openModal(popupAgreementDelete); \r\n        popupButtonDelete.addEventListener('click', () => {\r\n            deleteCard(cardElement, cardData._id);\r\n            closeModal(popupAgreementDelete);\r\n        });\r\n    })\r\n    } else {\r\n        buttonDelete.remove()\r\n    };\r\n    \r\n\r\n    cardImage.addEventListener('click', () => {\r\n        openImagePopup(cardElement);\r\n    });\r\n\r\n\r\n    if(cardData.likes.some((like) => like._id === userId)) {\r\n        cardLikeButton.classList.add('card__like-button_is-active');\r\n    }\r\n    cardElement.querySelector('.card__like-button').addEventListener('click', (evt) => {\r\n        toggleLike(cardLikeButton, cardData._id, cardLikeCounter);\r\n    });\r\n\r\n    return cardElement;\r\n}\r\n\r\nfunction deleteCard(card, cardId) {\r\n    return deleteCardRequest(cardId) \r\n    .then((result) => {\r\n        card.remove();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n};\r\n\r\n\r\nfunction toggleLike (evt, cardId, cardLikeCounter) {\r\n    const like = evt.classList.contains(\"card__like-button_is-active\") ? deleteLikeRequest : addLikeRequest;\r\n    like(cardId)\r\n    .then((result) => {\r\n        evt.classList.toggle(\"card__like-button_is-active\")\r\n        cardLikeCounter.textContent = result.likes.length;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n}\r\n\r\n\r\nexport {createCard, deleteCard, toggleLike};","// Переменная, в которой объект настроек\r\nconst validationObj = {\r\n    formSelector: '.popup__form',\r\n    inputSelector: '.popup__input',\r\n    submitButtonSelector: '.popup__button',\r\n    inactiveButtonClass: 'popup__button_inactive',\r\n    inputErrorClass: 'popup__input_type_error',\r\n    errorClass: 'popup__input-error_active'\r\n};\r\n\r\n\r\n// Функция, которая добавляет класс с ошибкой\r\nconst showInputError = (formElement, inputElement, errorMessage, validationObj) => {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`); \r\n    inputElement.classList.add(validationObj.inputErrorClass);\r\n    errorElement.textContent = errorMessage;\r\n    errorElement.classList.add(validationObj.errorClass);\r\n};\r\n\r\n// Функция, которая удаляет класс с ошибкой\r\nconst hideInputError = (formElement, inputElement, validationObj) => {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`); \r\n    inputElement.classList.remove(validationObj.inputErrorClass);\r\n    errorElement.textContent = '';\r\n    errorElement.classList.remove(validationObj.errorClass);\r\n};\r\n\r\n// Функция, которая проверяет валидность поля\r\nconst isValid = (formElement, inputElement) => {\r\n    if (inputElement.validity.patternMismatch) {\r\n        inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n        inputElement.setCustomValidity(\"\");\r\n  }\r\n\r\n    if (!inputElement.validity.valid) {\r\n        showInputError(formElement, inputElement, inputElement.validationMessage, validationObj);\r\n  } else {\r\n        hideInputError(formElement, inputElement, validationObj);\r\n  }\r\n};\r\n\r\n// Функция, которая проверяет валидность всех полей в форме\r\nconst hasInvalidInput = (inputList) => {\r\n    return inputList.some((inputElement) => {\r\n        return !inputElement.validity.valid;\r\n    })\r\n}\r\n\r\n// Функция, которая ищет все поля формы и вешает на них слушатель\r\nconst setEventListener = (formElement, validationObj) => {\r\n    const inputList = Array.from(formElement.querySelectorAll(validationObj.inputSelector));\r\n    const buttonElement = formElement.querySelector(validationObj.submitButtonSelector);\r\n    toggleButtonState(inputList, buttonElement, validationObj);\r\n    inputList.forEach((inputElement) => {\r\n        inputElement.addEventListener('input', () => {\r\n            isValid(formElement, inputElement)\r\n            toggleButtonState(inputList, buttonElement, validationObj)\r\n        });\r\n    });\r\n};\r\n\r\n// Функция, которая ищет все формы\r\nconst enableValidation = (validationObj) => {\r\n    const formList = Array.from(document.querySelectorAll(validationObj.formSelector));\r\n    formList.forEach((formElement) => {\r\n        setEventListener(formElement, validationObj);\r\n    });\r\n}\r\n\r\n// Функция, которая отвечает ха состояние кнопки\r\nconst toggleButtonState = (inputList, buttonElement, validationObj) => {\r\n    if (hasInvalidInput(inputList)) {\r\n        buttonElement.disabled = true;\r\n        buttonElement.classList.add(validationObj.inactiveButtonClass);\r\n    } else {\r\n        buttonElement.disabled = false;\r\n        buttonElement.classList.remove(validationObj.inactiveButtonClass);\r\n    }\r\n}\r\n\r\n\r\nconst clearValidation = (formElement, validationObj) => {\r\n    const listErrorSpan = Array.from(formElement.querySelectorAll(validationObj.inputSelector));\r\n    const buttonElement = formElement.querySelector(validationObj.submitButtonSelector);\r\n    listErrorSpan.forEach((inputElement) => {\r\n        hideInputError(formElement, inputElement, validationObj);\r\n    });\r\n    toggleButtonState(listErrorSpan, buttonElement, validationObj)\r\n}\r\n\r\n\r\nexport {enableValidation, validationObj, clearValidation};","// @todo: Темплейт карточки\r\n\r\n// @todo: DOM узлы\r\n\r\n// @todo: Функция создания карточки\r\n\r\n// @todo: Функция удаления карточки\r\n\r\n// @todo: Вывести карточки на страницу\r\nimport './pages/index.css';\r\nimport {createCard, deleteCard, toggleLike} from './components/card'\r\nimport {closeModal, openModal, initModals} from './components/modal'\r\nimport {enableValidation, validationObj, clearValidation} from './components/validation'\r\nimport {userInformation, addAllCards, saveUserInformation, addCard, newAvatar} from './api'\r\n\r\nconst placesList = document.querySelector(\".places__list\");\r\nconst popupTypeImage = document.querySelector('.popup_type_image');\r\nconst popupContentImage = popupTypeImage.querySelector('.popup__content_content_image');\r\nlet userId = '';\r\nlet userAvatar = \"\";\r\n\r\n//Функция открытия попапа карточки\r\nfunction openImagePopup(cardElement) {\r\n      openModal(popupTypeImage);\r\n      popupContentImage.querySelector('.popup__image').src = cardElement.querySelector('.card__image').src;\r\n      popupContentImage.querySelector('.popup__caption').textContent = cardElement.querySelector('.card__title').textContent;\r\n      popupContentImage.querySelector('.popup__image').alt = cardElement.querySelector('.card__title').textContent;\r\n};\r\n\r\n// Находим форму профиля и инпуты в ней\r\nconst formElementProfile = document.querySelector('form[name=\"edit-profile\"]');\r\nconst nameInput = formElementProfile.querySelector('.popup__input_type_name');\r\nconst jobInput = formElementProfile.querySelector('.popup__input_type_description');\r\n\r\n//Находим элементы шапки, куда вставим значения полей\r\nconst profileInfo = document.querySelector('.profile__info');\r\nconst profileTitle = profileInfo.querySelector('.profile__title');\r\nconst profileDescription = profileInfo.querySelector('.profile__description');\r\n\r\n// Обработчик кнопки обновления профиля\r\nfunction submitEditProfileForm (evt) {\r\n    evt.preventDefault(); \r\n    loading (evt.target, true);\r\n\r\n    saveUserInformation({\r\n    name: nameInput.value,\r\n    about: jobInput.value,\r\n  })\r\n    .then((result) => {\r\n      profileTitle.textContent = result.name;\r\n      profileDescription.textContent = result.about;\r\n      closeModal(popupTypeEdit);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n    .finally(() => {\r\n      loading (evt.target, false);\r\n    })\r\n}\r\n\r\n//Слушатель кнопки обновления профиля\r\nformElementProfile.addEventListener('submit', submitEditProfileForm);\r\n\r\nconst formElementCreate = document.querySelector('form[name=\"new-place\"]');\r\n\r\n// Функция заплнения полей профиля\r\nfunction fillFormFields () {\r\n    nameInput.value = profileTitle.textContent\r\n    jobInput.value = profileDescription.textContent\r\n}\r\n\r\nconst popupTypeEdit = document.querySelector('.popup_type_edit');\r\nconst profileEditButton = document.querySelector('.profile__edit-button');\r\n\r\n//Слушатель кнопки открытия профиля\r\nprofileEditButton.addEventListener('click', () => {\r\n    fillFormFields();\r\n    clearValidation(popupTypeEdit, validationObj)\r\n    openModal(popupTypeEdit);\r\n});\r\n\r\n//Слушатель для функции initModals\r\ndocument.addEventListener('DOMContentLoaded', initModals);\r\n\r\n// Вызываем функцию, которая ищет все формы\r\nenableValidation(validationObj); \r\n\r\nconst profileAddButton = document.querySelector('.profile__add-button');\r\nconst popupTypeNewCard = document.querySelector('.popup_type_new-card');\r\n\r\n//Слушатель кнопки открытия попапа добаления карточек\r\nprofileAddButton.addEventListener('click', () => openModal(popupTypeNewCard));\r\n\r\nconst nameInputCard = formElementCreate.querySelector('.popup__input_type_card-name');\r\nconst linkInputCard = formElementCreate.querySelector('.popup__input_type_url');\r\n\r\n\r\n// Функция сбора информации для добавления одной карточки\r\nfunction handleFormSubmitNewCards (evt){\r\n  evt.preventDefault();\r\n  loading (evt.target, true);\r\n  \r\n  addCard({\r\n    name: nameInputCard.value,\r\n    link: linkInputCard.value,\r\n  })\r\n  .then((result) => {\r\n    const cardElement = createCard(result, userId, deleteCard, toggleLike, openImagePopup);\r\n    placesList.prepend(cardElement);\r\n    formElementCreate.reset();\r\n    clearValidation(formElementCreate, validationObj)\r\n    closeModal(popupTypeNewCard);\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  })\r\n  .finally(() => {\r\n      loading (evt.target, false);\r\n    })\r\n}\r\n\r\n//Слушатель кнопки отправки данных новой карточки\r\nformElementCreate.addEventListener('submit', handleFormSubmitNewCards);\r\n\r\n\r\nconst profileImageButton = document.querySelector('.profile__image-button');\r\nconst popupNewAvatar = document.querySelector('.popup_new_avatar');\r\nconst popupInputAvatar = document.querySelector('.popup__input_avatar');\r\n\r\n\r\n//Слушатель кнопки открытия редактирования аватара\r\nprofileImageButton.addEventListener('click', () => {\r\n    clearValidation(popupNewAvatar, validationObj)\r\n    openModal(popupNewAvatar);\r\n});\r\n\r\n\r\nconst profileImage = document.querySelector('.profile__image')\r\n\r\n// Функция сбора информации для редактирования аватара\r\nfunction handleFormSubmitNewAvatar (evt){\r\n  evt.preventDefault();\r\n  loading (evt.target, true);\r\n\r\n  newAvatar({\r\n    avatar: popupInputAvatar.value,\r\n  })\r\n  .then((result) => {\r\n      profileImage.style.backgroundImage = `url(${result.avatar})`;\r\n      closeModal(popupNewAvatar);\r\n    })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  })\r\n  .finally(() => {\r\n      loading (evt.target, false);\r\n    })\r\n}\r\n\r\nconst avatar = document.querySelector('form[name=\"avatar\"]');\r\n\r\n//Слушатель кнопки отправки новой аватарки\r\navatar.addEventListener('submit', handleFormSubmitNewAvatar);\r\n\r\n//Функция замены текста кнопки при загрузке\r\nfunction loading (form, status) {\r\n  const button = form.querySelector('.popup__button')\r\n  if(status){\r\n    button.textContent = 'Сохранение...'\r\n  } else {\r\n    button.textContent = 'Сохранить'\r\n  }\r\n}\r\n\r\n// Передаём  промисы методу Promise.all\r\nPromise.all([userInformation(), addAllCards()])\r\n  .then((result) => {\r\n    userId = result[0]._id;\r\n    userAvatar = result[0].avatar;\r\n    profileTitle.textContent = result[0].name;\r\n    profileDescription.textContent = result[0].about;\r\n    profileImage.style.backgroundImage = `url(${userAvatar})`;\r\n    console.log('result:', result);\r\n    result[1].forEach((cardData) => {\r\n      placesList.append(\r\n        createCard(cardData, userId, deleteCard, toggleLike, openImagePopup)\r\n      );\r\n    });\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  });"],"names":["config","baseUrl","headers","authorization","addLikeRequest","cardId","fetch","concat","method","body","JSON","stringify","_id","then","res","result","deleteLikeRequest","ok","json","Promise","reject","status","closeModalEsc","element","event","key","closeModal","document","querySelector","openModal","classList","add","setTimeout","addEventListener","modal","remove","removeEventListener","modals","querySelectorAll","cardTemplate","content","popupAgreementDelete","popupButtonDelete","createCard","cardData","userId","deleteCard","toggleLike","openImagePopup","cardElement","cloneNode","cardImage","cardLikeCounter","buttonDelete","cardLikeButton","textContent","name","src","link","alt","likes","length","owner","some","like","evt","card","deleteCardRequest","catch","err","console","log","contains","toggle","validationObj","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","hideInputError","formElement","inputElement","errorElement","id","isValid","validity","patternMismatch","setCustomValidity","dataset","errorMessage","valid","showInputError","validationMessage","toggleButtonState","inputList","buttonElement","hasInvalidInput","disabled","clearValidation","listErrorSpan","Array","from","forEach","placesList","popupTypeImage","popupContentImage","userAvatar","formElementProfile","nameInput","jobInput","profileInfo","profileTitle","profileDescription","newProfile","preventDefault","loading","target","value","about","popupTypeEdit","finally","formElementCreate","setEventListener","enableValidation","profileAddButton","popupTypeNewCard","nameInputCard","linkInputCard","newCard","prepend","reset","profileImageButton","popupNewAvatar","popupInputAvatar","profileImage","form","avatar","style","backgroundImage","all","append"],"sourceRoot":""}