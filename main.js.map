{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto_project/./src/components/api.js","webpack://mesto_project/./src/components/card.js","webpack://mesto_project/./src/components/modal.js","webpack://mesto_project/./src/components/validation.js","webpack://mesto_project/./src/index.js"],"sourcesContent":["/*Идентификатор нашей группы: wff-cohort-41\r\nТвой токен: cab10226-6fa6-43c5-8b85-1656c593204c*/\r\n\r\nconst config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-41',\r\n  headers: {\r\n    authorization: 'cab10226-6fa6-43c5-8b85-1656c593204c',\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\n\r\nexport const userInformation = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers\r\n  })\r\n  .then((res) => getresult(res));\r\n}\r\n  \r\n\r\nexport const addAllCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers\r\n  })\r\n  .then((res) => getresult(res));\r\n}\r\n\r\n\r\nexport const saveUserInformation = (newProfile) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: newProfile.name,\r\n      about: newProfile.about,\r\n    })\r\n  })\r\n  .then((res) => getresult(res));\r\n}\r\n\r\n\r\nexport const addCard = (newCard) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: newCard.name,\r\n      link: newCard.link,\r\n      like: newCard.like,\r\n    })\r\n  })\r\n  .then((res) => getresult(res));\r\n}\r\n\r\nexport const deleteCardRequest = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n  .then((res) => getresult(res));\r\n}\r\n\r\n\r\nexport const addLikeRequest = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      _id: cardId,\r\n    }),\r\n  })\r\n  .then((res) => getresult(res));\r\n}\r\n\r\n\r\nexport const deleteLikeRequest = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n  .then((res) => getresult(res));\r\n}\r\n\r\n\r\nexport const newAvatar = (avatar) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: avatar.avatar,\r\n    }),\r\n  })\r\n  .then((res) => getresult(res));\r\n}\r\n\r\n\r\nfunction getresult(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n}","import {addLikeRequest, deleteLikeRequest, deleteCardRequest} from './api'\r\n\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\n\r\nfunction createCard(cardData, userId, deleteCard, toggleLike, openImagePopup) {\r\n    const cardElement = cardTemplate.querySelector('.card').cloneNode(true);\r\n    const cardImage = cardElement.querySelector('.card__image');\r\n    const cardLikeCounter = cardElement.querySelector('.card__like-counter');\r\n    const buttonDelete = cardElement.querySelector('.card__delete-button')\r\n    const cardLikeButton = cardElement.querySelector('.card__like-button');\r\n\r\n    cardElement.querySelector('.card__title').textContent = cardData.name;\r\n    cardImage.src = cardData.link;\r\n    cardImage.alt = cardData.name;\r\n    cardLikeCounter.textContent = cardData.likes.length;\r\n\r\n    if(userId === cardData.owner._id) {\r\n        buttonDelete.addEventListener('click', (evt) => {\r\n            deleteCard (cardElement, cardData._id)\r\n        })\r\n    } else {\r\n        buttonDelete.remove()\r\n    };\r\n    \r\n    cardImage.addEventListener('click', () => {\r\n        openImagePopup(cardData);\r\n    });\r\n\r\n    if(cardData.likes.some((like) => like._id === userId)) {\r\n        cardLikeButton.classList.add('card__like-button_is-active');\r\n    }\r\n    cardElement.querySelector('.card__like-button').addEventListener('click', (evt) => {\r\n        toggleLike(cardLikeButton, cardData._id, cardLikeCounter);\r\n    });\r\n\r\n    return cardElement;\r\n}\r\n\r\n\r\nfunction deleteCard(card, cardId) {\r\n  return deleteCardRequest(cardId)\r\n    .then((result) => {\r\n      card.remove();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n}\r\n\r\nfunction toggleLike (evt, cardId, cardLikeCounter) {\r\n    const like = evt.classList.contains(\"card__like-button_is-active\") ? deleteLikeRequest : addLikeRequest;\r\n    like(cardId)\r\n    .then((result) => {\r\n        evt.classList.toggle(\"card__like-button_is-active\")\r\n        cardLikeCounter.textContent = result.likes.length;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n}\r\n\r\n\r\nexport {createCard, deleteCard, toggleLike};","function closeModalEsc (element) {\r\n    if (event.key === 'Escape') {\r\n        const openedModals = document.querySelector('.popup_is-opened'); \r\n        closeModal(openedModals)\r\n    };\r\n};\r\n\r\n\r\nfunction openModal(element) {\r\n    element.classList.add('popup_is-animated');\r\n        setTimeout(() => {\r\n            element.classList.add('popup_is-opened');\r\n    }, 10);\r\n    document.addEventListener('keydown', closeModalEsc);\r\n};\r\n\r\nfunction closeModal(modal) {\r\n    modal.classList.remove('popup_is-opened');\r\n    document.removeEventListener('keydown', closeModalEsc);\r\n    setTimeout(() => {\r\n        modal.classList.remove('popup_is-animated');\r\n    }, 300);\r\n}\r\n\r\n// Получаем массив всех модальных окон\r\nconst modals = document.querySelectorAll('.popup'); \r\n\r\nfunction initModals() {\r\n    modals.forEach((modal) => {\r\n        modal.addEventListener('click', (event)  => {\r\n            if(event.target.classList.contains('popup__close') || event.target.classList.contains('popup')) { // так мы проверим, что юзер кликнул на кнопку или оверлей\r\n                closeModal(modal); // и если это так, закрываем окно, на которое вешаем слушатель (он же на нем сработал)\r\n            }\r\n        })\r\n    })\r\n};\r\n\r\nexport {closeModal, openModal, initModals};","// Функция, которая добавляет класс с ошибкой\r\nconst showInputError = (formElement, inputElement, errorMessage, validationObj) => {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`); \r\n    inputElement.classList.add(validationObj.inputErrorClass);\r\n    errorElement.textContent = errorMessage;\r\n    errorElement.classList.add(validationObj.errorClass);\r\n};\r\n\r\n// Функция, которая удаляет класс с ошибкой\r\nconst hideInputError = (formElement, inputElement, validationObj) => {\r\n    inputElement.setCustomValidity(\"\");\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`); \r\n    inputElement.classList.remove(validationObj.inputErrorClass);\r\n    errorElement.textContent = '';\r\n    errorElement.classList.remove(validationObj.errorClass);\r\n};\r\n\r\n// Функция, которая проверяет валидность поля\r\nconst isValid = (formElement, inputElement, validationObj) => {\r\n    if (inputElement.validity.patternMismatch) {\r\n        inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n        inputElement.setCustomValidity(\"\");\r\n  }\r\n\r\n    if (!inputElement.validity.valid) {\r\n        showInputError(formElement, inputElement, inputElement.validationMessage, validationObj);\r\n  } else {\r\n        hideInputError(formElement, inputElement, validationObj);\r\n  }\r\n};\r\n\r\n// Функция, которая проверяет валидность всех полей в форме\r\nconst hasInvalidInput = (inputList) => {\r\n    return inputList.some((inputElement) => {\r\n        return !inputElement.validity.valid;\r\n    })\r\n}\r\n\r\n// Функция, которая ищет все поля формы и вешает на них слушатель\r\nconst setEventListener = (formElement, validationObj) => {\r\n    const inputList = Array.from(formElement.querySelectorAll(validationObj.inputSelector));\r\n    const buttonElement = formElement.querySelector(validationObj.submitButtonSelector);\r\n    toggleButtonState(inputList, buttonElement, validationObj);\r\n    inputList.forEach((inputElement) => {\r\n        inputElement.addEventListener('input', () => {\r\n            isValid(formElement, inputElement, validationObj)\r\n            toggleButtonState(inputList, buttonElement, validationObj)\r\n        });\r\n    });\r\n};\r\n\r\n// Функция, которая ищет все формы\r\nconst enableValidation = (validationObj) => {\r\n    const formList = Array.from(document.querySelectorAll(validationObj.formSelector));\r\n    formList.forEach((formElement) => {\r\n        setEventListener(formElement, validationObj);\r\n    });\r\n}\r\n\r\n// Функция, которая отвечает ха состояние кнопки\r\nconst toggleButtonState = (inputList, buttonElement, validationObj) => {\r\n    if (hasInvalidInput(inputList)) {\r\n        buttonElement.disabled = true;\r\n        buttonElement.classList.add(validationObj.inactiveButtonClass);\r\n    } else {\r\n        buttonElement.disabled = false;\r\n        buttonElement.classList.remove(validationObj.inactiveButtonClass);\r\n    }\r\n}\r\n\r\n\r\nconst clearValidation = (formElement, validationObj) => {\r\n    const listErrorSpan = Array.from(formElement.querySelectorAll(validationObj.inputSelector));\r\n    const buttonElement = formElement.querySelector(validationObj.submitButtonSelector);\r\n    listErrorSpan.forEach((inputElement) => {\r\n        hideInputError(formElement, inputElement, validationObj);\r\n    });\r\n    toggleButtonState(listErrorSpan, buttonElement, validationObj)\r\n}\r\n\r\n\r\nexport {enableValidation, clearValidation};","// @todo: Темплейт карточки\r\n\r\n// @todo: DOM узлы\r\n\r\n// @todo: Функция создания карточки\r\n\r\n// @todo: Функция удаления карточки\r\n\r\n// @todo: Вывести карточки на страницу\r\nimport './pages/index.css';\r\nimport {createCard, deleteCard, toggleLike} from './components/card'\r\nimport {closeModal, openModal, initModals} from './components/modal'\r\nimport {enableValidation, clearValidation} from './components/validation'\r\nimport {userInformation, addAllCards, saveUserInformation, addCard, newAvatar, deleteCardRequest} from './components/api'\r\n\r\n\r\n// Переменная, в которой объект настроек\r\nconst validationObj = {\r\n    formSelector: '.popup__form',\r\n    inputSelector: '.popup__input',\r\n    submitButtonSelector: '.popup__button',\r\n    inactiveButtonClass: 'popup__button_inactive',\r\n    inputErrorClass: 'popup__input_type_error',\r\n    errorClass: 'popup__input-error_active'\r\n};\r\n\r\n\r\nconst placesList = document.querySelector(\".places__list\");\r\nconst popupTypeImage = document.querySelector('.popup_type_image');\r\nconst popupContentImage = document.querySelector('.popup__content_content_image');\r\nconst popupImage = document.querySelector('.popup__image')\r\nconst popupImageText = document.querySelector('.popup__caption')\r\nlet userId = '';\r\nlet userAvatar = \"\";\r\n\r\n//Функция открытия попапа карточки\r\nfunction openImagePopup(card) {\r\n  popupImage.src = card.link;\r\n  popupImage.alt = card.name;\r\n  popupImageText.textContent = card.name;\r\n  openModal(popupTypeImage);\r\n};\r\n\r\n// Находим форму профиля и инпуты в ней\r\nconst formElementProfile = document.querySelector('form[name=\"edit-profile\"]');\r\nconst nameInput = formElementProfile.querySelector('.popup__input_type_name');\r\nconst jobInput = formElementProfile.querySelector('.popup__input_type_description');\r\n\r\n//Находим элементы шапки, куда вставим значения полей\r\nconst profileInfo = document.querySelector('.profile__info');\r\nconst profileTitle = profileInfo.querySelector('.profile__title');\r\nconst profileDescription = profileInfo.querySelector('.profile__description');\r\n\r\n// Обработчик кнопки обновления профиля\r\nfunction submitEditProfileForm (evt) {\r\n    evt.preventDefault(); \r\n    loading (evt.target, true);\r\n\r\n    saveUserInformation({\r\n    name: nameInput.value,\r\n    about: jobInput.value,\r\n  })\r\n    .then((result) => {\r\n      profileTitle.textContent = result.name;\r\n      profileDescription.textContent = result.about;\r\n      closeModal(popupTypeEdit);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n    .finally(() => {\r\n      loading (evt.target, false);\r\n    })\r\n}\r\n\r\n//Слушатель кнопки обновления профиля\r\nformElementProfile.addEventListener('submit', submitEditProfileForm);\r\n\r\nconst formElementCreate = document.querySelector('form[name=\"new-place\"]');\r\n\r\n// Функция заплнения полей профиля\r\nfunction fillFormFields () {\r\n    nameInput.value = profileTitle.textContent\r\n    jobInput.value = profileDescription.textContent\r\n}\r\n\r\nconst popupTypeEdit = document.querySelector('.popup_type_edit');\r\nconst profileEditButton = document.querySelector('.profile__edit-button');\r\n\r\n//Слушатель кнопки открытия профиля\r\nprofileEditButton.addEventListener('click', () => {\r\n    fillFormFields();\r\n    clearValidation(popupTypeEdit, validationObj)\r\n    openModal(popupTypeEdit);\r\n});\r\n\r\n//Слушатель для функции initModals\r\ndocument.addEventListener('DOMContentLoaded', initModals);\r\n\r\n// Вызываем функцию, которая ищет все формы\r\nenableValidation(validationObj); \r\n\r\nconst profileAddButton = document.querySelector('.profile__add-button');\r\nconst popupTypeNewCard = document.querySelector('.popup_type_new-card');\r\n\r\n//Слушатель кнопки открытия попапа добаления карточек\r\nprofileAddButton.addEventListener('click', () => openModal(popupTypeNewCard));\r\n\r\nconst nameInputCard = formElementCreate.querySelector('.popup__input_type_card-name');\r\nconst linkInputCard = formElementCreate.querySelector('.popup__input_type_url');\r\n\r\n\r\n// Функция сбора информации для добавления одной карточки\r\nfunction handleFormSubmitNewCards (evt){\r\n  evt.preventDefault();\r\n  loading (evt.target, true);\r\n  \r\n  addCard({\r\n    name: nameInputCard.value,\r\n    link: linkInputCard.value,\r\n  })\r\n  .then((result) => {\r\n    const cardElement = createCard(result, userId, deleteCard, toggleLike, openImagePopup);\r\n    placesList.prepend(cardElement);\r\n    formElementCreate.reset();\r\n    clearValidation(formElementCreate, validationObj)\r\n    closeModal(popupTypeNewCard);\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  })\r\n  .finally(() => {\r\n      loading (evt.target, false);\r\n    })\r\n}\r\n\r\n//Слушатель кнопки отправки данных новой карточки\r\nformElementCreate.addEventListener('submit', handleFormSubmitNewCards);\r\n\r\n\r\nconst profileImageButton = document.querySelector('.profile__image-button');\r\nconst popupNewAvatar = document.querySelector('.popup_new_avatar');\r\nconst popupInputAvatar = document.querySelector('.popup__input_avatar');\r\n\r\n\r\n//Слушатель кнопки открытия редактирования аватара\r\nprofileImageButton.addEventListener('click', () => {\r\n    clearValidation(popupNewAvatar, validationObj)\r\n    openModal(popupNewAvatar);\r\n});\r\n\r\n\r\nconst profileImage = document.querySelector('.profile__image')\r\n\r\n// Функция сбора информации для редактирования аватара\r\nfunction handleFormSubmitNewAvatar (evt){\r\n  evt.preventDefault();\r\n  loading (evt.target, true);\r\n\r\n  newAvatar({\r\n    avatar: popupInputAvatar.value,\r\n  })\r\n  .then((result) => {\r\n      profileImage.style.backgroundImage = `url(${result.avatar})`;\r\n      closeModal(popupNewAvatar);\r\n    })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  })\r\n  .finally(() => {\r\n      loading (evt.target, false);\r\n    })\r\n}\r\n\r\nconst avatar = document.querySelector('form[name=\"avatar\"]');\r\n\r\n//Слушатель кнопки отправки новой аватарки\r\navatar.addEventListener('submit', handleFormSubmitNewAvatar);\r\n\r\n//Функция замены текста кнопки при загрузке\r\nfunction loading (form, status) {\r\n  const button = form.querySelector('.popup__button')\r\n  if(status){\r\n    button.textContent = 'Сохранение...'\r\n  } else {\r\n    button.textContent = 'Сохранить'\r\n  }\r\n}\r\n\r\n\r\n// Передаём  промисы методу Promise.all\r\nPromise.all([userInformation(), addAllCards()])\r\n  .then((result) => {\r\n    userId = result[0]._id;\r\n    userAvatar = result[0].avatar;\r\n    profileTitle.textContent = result[0].name;\r\n    profileDescription.textContent = result[0].about;\r\n    profileImage.style.backgroundImage = `url(${userAvatar})`;\r\n    result[1].forEach((cardData) => {\r\n      placesList.append(\r\n        createCard(cardData, userId, deleteCard, toggleLike, openImagePopup)\r\n      );\r\n    });\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  });"],"names":["config","baseUrl","headers","authorization","addLikeRequest","cardId","fetch","concat","method","body","JSON","stringify","_id","then","res","getresult","deleteLikeRequest","ok","json","Promise","reject","status","cardTemplate","document","querySelector","content","createCard","cardData","userId","deleteCard","toggleLike","openImagePopup","cardElement","cloneNode","cardImage","cardLikeCounter","buttonDelete","cardLikeButton","textContent","name","src","link","alt","likes","length","owner","addEventListener","evt","remove","some","like","classList","add","card","deleteCardRequest","result","catch","err","console","log","contains","toggle","closeModalEsc","element","event","key","closeModal","openModal","setTimeout","modal","removeEventListener","modals","querySelectorAll","hideInputError","formElement","inputElement","validationObj","setCustomValidity","errorElement","id","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","clearValidation","listErrorSpan","Array","from","inputSelector","submitButtonSelector","forEach","formSelector","placesList","popupTypeImage","popupImage","popupImageText","userAvatar","formElementProfile","nameInput","jobInput","profileInfo","profileTitle","profileDescription","newProfile","preventDefault","loading","target","value","about","popupTypeEdit","finally","formElementCreate","patternMismatch","dataset","errorMessage","showInputError","validationMessage","isValid","setEventListener","enableValidation","profileAddButton","popupTypeNewCard","nameInputCard","linkInputCard","newCard","prepend","reset","profileImageButton","popupNewAvatar","popupInputAvatar","profileImage","form","avatar","style","backgroundImage","all","append"],"sourceRoot":""}